{"version":3,"sources":["components/ColorPickerComponent.js","components/ButtonsHandlerComponent.js","components/DisplayComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ColorPickerComponent","Component","ButtonsHandlerComponent","className","this","props","textSize","type","DisplayComponent","textColor","name","value","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAUeA,G,6KANP,OACI,2D,GAHuBC,cCmBpBC,E,uKAhBP,OACI,gCACI,sBAAMC,UAAU,QAAhB,SAAyBC,KAAKC,MAAMC,WACpC,sBAAKH,UAAU,YAAf,UACI,wBAAQI,KAAK,SAASJ,UAAU,kBAAhC,sBACA,wBAAQI,KAAK,SAASJ,UAAU,kBAAhC,sBACA,wBAAQI,KAAK,SAASJ,UAAU,kBAAhC,6B,GARkBF,aCmBvBO,E,uKAjBP,OACI,sBAAKL,UAAU,oBAAf,UACI,gCACI,uBAAMA,UAAU,mBAAhB,oBAA2CC,KAAKC,MAAMI,aACtD,uBAAMN,UAAU,mBAAhB,uBAA8CC,KAAKC,MAAMC,eAE7D,uBAAOC,KAAK,OAAOG,KAAK,UAAUC,MAAM,wB,GARzBV,aC2BhBW,E,uKAtBX,OACI,gCACI,sBAAKT,UAAU,MAAf,UACI,sBAAKA,UAAU,sCAAf,yBAEI,cAAC,EAAD,OAEJ,sBAAKA,UAAU,sCAAf,2BAEI,cAAC,EAAD,UAGR,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,0CAAf,SACI,cAAC,EAAD,e,GAhBFF,aCMHY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ae3beb04.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\nclass ColorPickerComponent extends Component {\n    render() {\n        return(\n            <div>ColorPickerComponent</div>\n        )\n    }\n}\n\nexport default ColorPickerComponent;","import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\n\nclass ButtonsHandlerComponent extends Component {\n    render() {\n        return(\n            <div>\n                <span className=\"label\">{this.props.textSize}</span>\n                <div className=\"btn-group\">\n                    <button type=\"button\" className=\"btn btn-default\">Decrease</button>\n                    <button type=\"button\" className=\"btn btn-default\">Increase</button>\n                    <button type=\"button\" className=\"btn btn-default\">Reset</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nButtonsHandlerComponent.propTypes = {\n    textSize: PropTypes.string\n}\nexport default ButtonsHandlerComponent;","import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\n\nclass DisplayComponent extends Component {\n    render() {\n        return(\n            <div className=\"display-component\">\n                <div>\n                    <span className=\"label label-info\">Color: {this.props.textColor}</span>\n                    <span className=\"label label-info\">Fontsize: {this.props.textSize}</span>\n                </div>\n                <input type=\"text\" name=\"textBox\" value=\"textBoxValue\"/>\n            </div>\n        )\n    }\n}\n\nDisplayComponent.propTypes = {\n    textBoxValue: PropTypes.string,\n    textColor: PropTypes.string,\n    textSize: PropTypes.string,\n}\nexport default DisplayComponent;","import './App.css';\nimport React,{Component} from \"react\";\nimport ColorPickerComponent from \"./components/ColorPickerComponent\";\nimport ButtonsHandlerComponent from \"./components/ButtonsHandlerComponent\";\nimport DisplayComponent from \"./components/DisplayComponent\";\n\nclass App extends Component {\n  render() {\n    return (\n        <div>\n            <div className=\"row\">\n                <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n                    Color picker\n                    <ColorPickerComponent/>\n                </div>\n                <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n                    Button Handler\n                    <ButtonsHandlerComponent/>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <DisplayComponent/>\n                </div>\n            </div>\n        </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}